## Bitnami node image version
## ref: https://hub.docker.com/r/bitnami/node/tags/
##
image: bitnami/node:9.5.0-r0-prod
devImage: bitnami/node:9.5.0-r0

## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent

## Git repository http/https
##
repository:  https://github.com/bitnami/sample-node-app.git

## Git repository revision to checkout
##
revision: master

## Specify the number of replicas for the application
##
replicas: 3

## Specify the port where your applucation will be running
##
applicationPort: 3000

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer
##
serviceType: LoadBalancer

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false
  path: /app/data
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # storageClass:
  accessMode: ReadWriteOnce
  size: 1Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 500m
  #   memory: 512Mi

## Provision an external database using kubernetes service catalog and the Open Service Broker for Azure 
##
externalDatabase:
## All of these values are only used when mariadb.enabled is set to false
  azure:
    enabled: false
    ## The Azure region in which to deploy Azure Cosmos MongoDB
    location: eastus
    ## The plan to request for Azure Cosmos MongoDB
    servicePlan: mongo-db

## Configure ingress resource that allow you to access the application. 
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  enabled: false
  path: /
  # Used to create an Ingress record.
  host: example.local
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  # tls:
  #   Secrets must be manually created in the namespace.
  #   - secretName: your-tls-cert
  #     hosts:
  #       - example.local
