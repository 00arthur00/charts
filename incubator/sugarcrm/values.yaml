## Bitnami sugarcrm image 
## ref: https://hub.docker.com/r/bitnami/sugarcrm/tags/
##
image: bitnami/sugarcrm:6.5.24-r2

## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent

## User of the application
## ref: https://github.com/bitnami/bitnami-docker-sugarcrm#environment-variables
##
sugarcrmUsername: user

## Application password
## Defaults to a random 10-character alphanumeric string if not set
## ref: https://github.com/bitnami/bitnami-docker-sugarcrm#environment-variables
## sugarcrmPassword: 

## Lastname
## ref: https://github.com/bitnami/bitnami-docker-sugarcrm#environment-variables
##
sugarcrmLastname: Name

## loadBalancerIP for the  Service (optional, cloud specific)
## ref: http://kubernetes.io/docs/user-guide/services/#type-loadbalancer
##
# sugarcrmLoadBalancerIP:

## Admin email
## ref: https://github.com/bitnami/bitnami-docker-sugarcrm#environment-variables
##
sugarcrmEmail: user@example.com

## SugarCRM HOST
## ref: https://github.com/bitnami/bitnami-docker-sugarcrm#environment-variables
##
##  sugarcrmHost: 



## SMTP mail delivery configuration
## ref: https://github.com/bitnami/bitnami-docker-sugarcrm#smtp-configuration
##
# smtpHost:
# smtpPort:
# smtpUser:
# smtpPassword:
# smtpProtocol:

##
## MariaDB chart configuration
##
mariadb:
  ## MariaDB root password
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
  ## mariadbRootPassword: 

  ## MariaDB user
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md
  ## mariadbUser:

  ## MariaDB Host 
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md
  ## mariadbHost:

  ## MariaDB Port 
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md
  ## mariadbPort:

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
    size: 8Gi

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer
##
serviceType: LoadBalancer

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  apache:
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
    size: 1Gi
  sugarcrm:
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
    size: 1Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m
